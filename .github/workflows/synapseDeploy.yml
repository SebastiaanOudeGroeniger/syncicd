name: Deployment of Synapse workspace

on:
  push:
    branches:
      - main

jobs:
 
  init:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.get_env.outputs.env }}
    steps:
      - id: get_env
        run: |
          if [[ '${{ github.head_ref || github.ref_name }}' == 'main' ]]; then
            echo "env=Production" >> $GITHUB_OUTPUT
          else
            echo "env=Unspecified" >> $GITHUB_OUTPUT
          fi

  deployment:
    runs-on: ubuntu-latest
    needs: [init] 
    environment: "${{needs.init.outputs.environment}}"
    steps:
    - name: Pre-run | Checkout repository
      uses: actions/checkout@v2

    - name: Pre-run | Install Azure CLI on self-hosted runner
      run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    - name: Pre-run | Install PowerShell on self-hosted runner
      run: |
          # Update the list of packages
          sudo apt-get update
          # Install pre-requisite packages.
          sudo apt-get install -y wget apt-transport-https software-properties-common
          # Download the Microsoft repository GPG keys
          wget -q "https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb"
          # Register the Microsoft repository GPG keys
          sudo dpkg -i packages-microsoft-prod.deb
          # Delete the the Microsoft repository GPG keys file
          rm packages-microsoft-prod.deb
          # Update the list of packages after we added packages.microsoft.com
          sudo apt-get update
          # Install PowerShell
          sudo apt-get install -y powershell
          # Install Az PowerShell module
          pwsh -Command "Install-Module -Name Az -Repository PSGallery -Force"

    - name: Pre-run | Azure login
      uses: Azure/login@v1
      with:
        creds: '{
                  "clientId":"${{ vars.SP_ID }}",
                  "clientSecret":"${{ secrets.SP_SECRET }}",
                  "subscriptionId":"${{ vars.SUBSCRIPTION_ID }}",
                  "tenantId":"${{ vars.TENANT_ID }}"
                }'
        enable-AzPSSession: true 

    - name: Synapse workspace deployment
      uses: SebastiaanOudeGroeniger/Synapse-workspace-deployment@master
      with:
        TargetWorkspaceName: ${{ vars.SYNAPSE_WS_NAME }}
        ArtifactsFolder: './synapse-workspace'
        environment: 'Azure Public'
        clientId: ${{ vars.SP_ID }}
        clientSecret:  ${{ secrets.SP_SECRET }}
        subscriptionId: ${{ vars.SUBSCRIPTION_ID }}
        resourceGroup: ${{ vars.RESOURCE_GROUP_SYNAPSE }}
        tenantId: ${{ vars.TENANT_ID }}
        DeleteArtifactsNotInTemplate: true
        operation: 'validateDeploy'
